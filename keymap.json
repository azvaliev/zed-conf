[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
      // undo/redo
      "u": "vim::Undo",
      "U": "vim::Redo",
      // LSP stuff
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      "g d": "editor::GoToDefinition",
      "g o:": "editor::GoToTypeDefinition",
      "g r": "editor::FindAllReferences",
      "g i": "editor::GoToImplementation",
      "space r n": "editor::Rename",
      "space f a": "editor::Format",
      "space c a": "editor::ToggleCodeActions",
      "space t t": "diagnostics::Deploy",
      // Other windows
      "space p v": "project_panel::ToggleFocus",
      "space c v": "collab_panel::ToggleFocus",
      "space p c": "workspace::CloseAllDocks",
      "space f f": "file_finder::Toggle",
      "space l g": "pane::DeploySearch",
      "space o r": "projects::OpenRecent",
      // Managing tabs
      "space b c": "pane::CloseActiveItem",
      "space t n": "workspace::NewFile",
      "space t o": "pane::CloseInactiveItems",
      // Terminal
      "ctrl-t": "workspace::NewCenterTerminal",
      // DBUI
      "space d b": ["task::Spawn", { "task_name": "Open DBUI" }]
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // normal mode only
      // This makes "x" just delete the character the cursor is on, in normal made
      "x": ["workspace::SendKeystrokes", "ctrl-v x"],
      // Make it so jumping to next match centers on screen
      "fn-1": "vim::MoveToNextMatch",
      "fn-2": "vim::MoveToPrevMatch",
      "n": ["workspace::SendKeystrokes", "fn-1 z z z"],
      "N": ["workspace::SendKeystrokes", "fn-2 z z z"]
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "K": "editor::MoveLineUp",
      "J": "editor::MoveLineDown",
      "x": "editor::Cut",
      // Replace selection with paste, without copying the replaced content to clipboard
      "space p": ["workspace::SendKeystrokes", "\" _ d h p"]
    }
  },
  // Markdown preview
  {
    "context": "Editor",
    "bindings": {
      "space m d": "markdown::OpenPreviewToTheSide"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      // Close project panel on escape
      "escape": "workspace::ToggleRightDock"
    }
  }
]
